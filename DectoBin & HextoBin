#include <stdio.h>
#include <string.h>
#include <math.h>


void decimalToBinary(int n) {
    if (n == 0) {
        printf("Binary: 0");
        return;
    }
    int binaryNum[32];
    int i = 0;
    while (n > 0) {
        binaryNum[i] = n % 2;
        n = n / 2;
        i++;
    }
    printf("Binary: ");
    for (int j = i - 1; j >= 0; j--) {
        printf("%d", binaryNum[j]);
    }
}


void hexadecimalToBinary(char hex[]) {
    printf("Binary: ");
    for (int i = 0; hex[i] != '\0'; i++) {
        switch (hex[i]) {
            case '0': printf("0000"); break;
            case '1': printf("0001"); break;
            case '2': printf("0010"); break;
            case '3': printf("0011"); break;
            case '4': printf("0100"); break;
            case '5': printf("0101"); break;
            case '6': printf("0110"); break;
            case '7': printf("0111"); break;
            case '8': printf("1000"); break;
            case '9': printf("1001"); break;
            case 'A': case 'a': printf("1010"); break;
            case 'B': case 'b': printf("1011"); break;
            case 'C': case 'c': printf("1100"); break;
            case 'D': case 'd': printf("1101"); break;
            case 'E': case 'e': printf("1110"); break;
            case 'F': case 'f': printf("1111"); break;
            default: printf("\nInvalid hexadecimal digit %c", hex[i]); return;
        }
    }
}

int main() {
    int choice, dec;
    char hex[100];

    printf("Choose conversion:\n");
    printf("1. Decimal to Binary\n");
    printf("2. Hexadecimal to Binary\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            printf("Enter a decimal number: ");
            scanf("%d", &dec);
            decimalToBinary(dec);
            break;
        case 2:
            printf("Enter a hexadecimal number: ");
            scanf("%s", hex);
            hexadecimalToBinary(hex);
            break;
        default:
            printf("Invalid choice.\n");
    }

    printf("\n");
    return 0;
}
